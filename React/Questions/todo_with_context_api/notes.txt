Q1. what are the various ways to setup context api?
Answer:### **Summary of Setting Up Context API for the Todo App**

1. **Single File Context (Basic Approach):**
   - **Context**: Created in the same file using `createContext()`.
   - **Provider**: Defined in the same file and wraps the application.
   - **Hook**: A custom `useTodo` hook is created in the same file for easy context consumption.
   - **Best For**: Small projects or when simplicity is a priority.

2. **Separate Files Context (Organized Approach):**
   - **Context**: Defined in `todoContext.jsx` using `createContext()`.
   - **Provider**: Implemented in a separate `todoProvider.jsx` file for better separation of concerns.
   - **Hook**: Custom `useTodo` hook is defined in the same file as the context (`todoContext.jsx`).
   - **Centralized Export**: An `index.js` file consolidates exports for easy importing.
   - **Best For**: Mid-sized projects that benefit from better file organization.

3. **Context with Reducer (Advanced Approach):**
   - **Context**: Defined using `createContext()` in `todoContext.jsx`.
   - **Provider**: Uses `useReducer` for state management, making it suitable for complex state logic.
   - **Reducer**: Logic for actions (e.g., create, update, delete todos) is moved into a separate `todoReducer.js` file.
   - **Hook**: `useTodo` is used to consume the context in components.
   - **Best For**: Large or complex projects with a need for robust state management.

### **Key Components in All Approaches**
- **Context**: Defines the shared state.
- **Provider**: Supplies the context value to child components.
- **Hook**: Simplifies the process of consuming the context.

---

### **When to Choose Each Approach**
- **Single File Context**: Quick prototypes or simple apps with minimal logic.
- **Separate Files Context**: Medium-scale projects that require better maintainability and structure.
- **Context with Reducer**: Complex apps where state logic involves multiple actions and updates.

Let me know if you'd like examples or further details on any specific approach!